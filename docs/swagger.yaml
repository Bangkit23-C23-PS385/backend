definitions:
  answer.InsertAnswerRequest:
    properties:
      interview_id:
        type: string
      question_id:
        type: string
    type: object
  answer.SubmitRatingRequest:
    properties:
      candidate_result:
        type: string
      ratings:
        items:
          $ref: '#/definitions/answer.UpdateAnswerRequest'
        type: array
    type: object
  answer.UpdateAnswerRequest:
    properties:
      id:
        type: string
      rating:
        type: integer
    type: object
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      access_token:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    - name
    - role
    type: object
  auth.ResendRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  candidate.CandidateRequest:
    properties:
      id:
        type: string
    type: object
  candidate.SubmitResultRequest:
    properties:
      id:
        type: string
      result:
        type: string
    type: object
  interview.FinishInterviewRequest:
    properties:
      id:
        type: string
      review_comment:
        type: string
      review_rating:
        type: integer
    type: object
  interview.GetByInterviewIDRequest:
    properties:
      id:
        type: string
    type: object
  interview.InsertNotesRequest:
    properties:
      interview_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  interview.InterviewTokenRequest:
    properties:
      token:
        type: string
    type: object
  interview_kit.InsertInterviewKitRequest:
    properties:
      description:
        type: string
      questions:
        items:
          $ref: '#/definitions/interview_kit.Questions'
        type: array
      title:
        type: string
    type: object
  interview_kit.InterviewKitDetailRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  interview_kit.Questions:
    properties:
      duration:
        type: integer
      question:
        type: string
      question_id:
        type: string
    type: object
  interview_kit.UpdateInterviewKit:
    properties:
      description:
        type: string
      id:
        type: string
      questions:
        items:
          $ref: '#/definitions/interview_kit.Questions'
        type: array
      title:
        type: string
    required:
    - id
    type: object
  position.PositionDetailRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  position.PositionRequest:
    properties:
      description:
        type: string
      interview_kit_ids:
        items:
          type: string
        type: array
      level:
        type: string
      title:
        type: string
    type: object
  position.UpdatePositionRequest:
    properties:
      description:
        type: string
      id:
        type: string
      interview_kit_ids:
        items:
          type: string
        type: array
      level:
        type: string
      title:
        type: string
    required:
    - id
    type: object
info:
  contact: {}
paths:
  /v1/answers:
    post:
      description: |-
        Used to insert an answer by candidate. This endpoint must be hit every time a candidate submit their answer
        This will return a presigned url for uploading candidate's video
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/answer.InsertAnswerRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert Answer
      tags:
      - Answer
  /v1/answers/interview:
    get:
      description: Get answers by interview id
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Interview ID
        in: query
        name: interview_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Answers By Interview
      tags:
      - Answer
  /v1/answers/rating:
    put:
      description: |-
        Submit candidate rating with its interview result if it's their last interview
        Hitting this endpoint will automatically updates interview and starts next interview if there are any or end it if it's their last
        candidate_result field is optional. Assign it with a value if this is candidate's last interview
        You can update candidate's result manually through v1/candidates [put]
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/answer.SubmitRatingRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Submit Rating
      tags:
      - Answer
  /v1/candidates:
    delete:
      description: Delete a candidate
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/candidate.CandidateRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Candidate
      tags:
      - Candidate
    get:
      description: Get all candidates
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - default: "1"
        description: Page
        in: query
        name: page
        type: string
      - default: "10"
        description: Limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Candidates
      tags:
      - Candidate
    post:
      description: Insert a candidate
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Position ID
        in: formData
        name: position_id
        required: true
        type: string
      - description: PIC ID
        in: formData
        name: pic_id
        required: true
        type: string
      - description: Expired Duration
        in: formData
        name: expired_duration
        required: true
        type: integer
      - description: CV
        in: formData
        name: cv
        required: true
        type: file
      - description: Start Time
        in: formData
        name: start_time
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert Candidate
      tags:
      - Candidate
    put:
      description: Submit candidate result
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/candidate.SubmitResultRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Submit Candidate Result
      tags:
      - Candidate
  /v1/candidates/detail:
    get:
      description: Get candidate by id
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Candidate By ID
      tags:
      - Candidate
  /v1/interviews:
    get:
      description: Get all interviews
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - default: "1"
        description: Page
        in: query
        name: page
        type: string
      - default: "10"
        description: Limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Interviews
      tags:
      - Interview
  /v1/interviews/candidate:
    get:
      description: Get interviews by candidate id
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Interview By Candidate ID
      tags:
      - Interview
  /v1/interviews/detail:
    get:
      description: Get interviews detail
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Interview Detail
      tags:
      - Interview
  /v1/interviews/finish:
    put:
      description: Finish interview for Candidate
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview.FinishInterviewRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Finish Interview for Candidate
      tags:
      - Interview
  /v1/interviews/token:
    post:
      description: Check token validity before candidate can start an interview
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview.InterviewTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Check Token Validity
      tags:
      - Interview
  /v1/kits:
    delete:
      description: Delete an Interview Kit
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview_kit.InterviewKitDetailRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete an Interview Kit
      tags:
      - Interview Kit
    get:
      description: Get all interview kits
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - default: "1"
        description: Page
        in: query
        name: page
        type: string
      - default: "10"
        description: Limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Interview Kits
      tags:
      - Interview Kit
    post:
      description: Insert an Interview Kit
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview_kit.InsertInterviewKitRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert an Interview Kit
      tags:
      - Interview Kit
    put:
      description: Update an Interview Kit
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview_kit.UpdateInterviewKit'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an Interview Kit
      tags:
      - Interview Kit
  /v1/kits/detail:
    get:
      description: Get a detailed interview kit containing its name and questions
        associated with it
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get A Detailed Interview Kit
      tags:
      - Interview Kit
  /v1/login:
    post:
      description: Login
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /v1/logout:
    post:
      description: Logout
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Logout
      tags:
      - Auth
  /v1/notes:
    delete:
      description: Delete notes
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview.GetByInterviewIDRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Notes
      tags:
      - Notes
    post:
      description: Insert notes
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/interview.InsertNotesRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert Notes
      tags:
      - Notes
  /v1/positions:
    delete:
      description: Delete Position
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/position.PositionDetailRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Position
      tags:
      - Position
    get:
      description: Get all available positions
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - default: "1"
        description: Page
        in: query
        name: page
        type: string
      - default: "10"
        description: Limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Positions
      tags:
      - Position
    post:
      description: Insert Position
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/position.PositionRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert Position
      tags:
      - Position
    put:
      description: Update Position
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/position.UpdatePositionRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update Position
      tags:
      - Position
  /v1/positions/detail:
    get:
      description: Get position by encrypted ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Position By ID
      tags:
      - Position
  /v1/register:
    post:
      description: Register
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register [SUPER ADMIN ONLY]
      tags:
      - Auth
  /v1/resend:
    post:
      description: Resend email for HR verification
      parameters:
      - description: Payload
        in: body
        name: Payload
        required: true
        schema:
          $ref: '#/definitions/auth.ResendRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Resend Email
      tags:
      - Auth
  /v1/users:
    delete:
      description: Delete user from app
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete User from App [SUPER ADMIN ONLY]
      tags:
      - User
    get:
      description: Get all user profile
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All User Profile [SUPER ADMIN ONLY]
      tags:
      - User
  /v1/users/self:
    get:
      description: Get user profile based on their token
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User Profile
      tags:
      - User
  /v1/verify:
    get:
      description: Verify Email
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Token
        in: query
        name: token
        required: true
        type: string
      responses:
        "302":
          description: Found
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Verify Email
      tags:
      - Auth
swagger: "2.0"
